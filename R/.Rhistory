bla3 <- clean.data.v2[,c(10:16,21:24,27:29)]
bla4 <- melt(bla3)
tmp.1 <- c(rep('Nidus width',59),
rep('Nidus height',59),
rep('Nidus depth',59),
rep('Nidus volume',59),
rep('Venuous drainage',59),
rep('Eloquence',59),
rep('Martin Spetzler',59))
tmp.2 <- rep(tmp.1,2)
bla4$condition <- tmp.2
tmp.3 <- c(rep('1st',length(tmp.1)),
rep('2nd',length(tmp.1)))
bla4$time <- tmp.3
names(bla4)[3:4] <- c('Condition','Time')
ggplot(data = bla4, aes(x= Condition, y = value, fill = Time)) +
geom_boxplot() + scale_y_continuous(limits = c(0,100))
#plot differences
bla5 <- melt(bla3[,1:7] - bla3[,8:14])
bla5$Condition <- tmp.1
ggplot(data = bla5, aes(x= Condition, y = value)) +
geom_boxplot() + scale_y_continuous(limits = c(-20,20)) +
title('Differences')
library('reshape2')
bla3 <- clean.data.v2[,c(10:16,21:24,27:29)]
bla4 <- melt(bla3)
tmp.1 <- c(rep('Nidus width',59),
rep('Nidus height',59),
rep('Nidus depth',59),
rep('Nidus volume',59),
rep('Venuous drainage',59),
rep('Eloquence',59),
rep('Martin Spetzler',59))
tmp.2 <- rep(tmp.1,2)
bla4$condition <- tmp.2
tmp.3 <- c(rep('1st',length(tmp.1)),
rep('2nd',length(tmp.1)))
bla4$time <- tmp.3
names(bla4)[3:4] <- c('Condition','Time')
ggplot(data = bla4, aes(x= Condition, y = value, fill = Time)) +
geom_boxplot() + scale_y_continuous(limits = c(0,100))
#plot differences
bla5 <- melt(bla3[,1:7] - bla3[,8:14])
bla5$Condition <- tmp.1
ggplot(data = bla5, aes(x= Condition, y = value)) +
geom_boxplot() + scale_y_continuous(limits = c(-20,20))
library('reshape2')
bla3 <- clean.data.v2[,c(10:16,21:24,27:29)]
bla4 <- melt(bla3)
tmp.1 <- c(rep('Nidus width',59),
rep('Nidus height',59),
rep('Nidus depth',59),
rep('Nidus volume',59),
rep('Venuous drainage',59),
rep('Eloquence',59),
rep('Martin Spetzler',59))
tmp.2 <- rep(tmp.1,2)
bla4$condition <- tmp.2
tmp.3 <- c(rep('1st',length(tmp.1)),
rep('2nd',length(tmp.1)))
bla4$time <- tmp.3
names(bla4)[3:4] <- c('Condition','Time')
ggplot(data = bla4, aes(x= Condition, y = value, fill = Time)) +
geom_boxplot() + scale_y_continuous(limits = c(0,100))
#plot differences
bla5 <- melt(bla3[,1:7] - bla3[,8:14])
bla5$Condition <- tmp.1
ggplot(data = bla5, aes(x= Condition, y = value)) +
geom_boxplot(color='blue') + scale_y_continuous(limits = c(-20,20))
library('reshape2')
bla3 <- clean.data.v2[,c(10:16,21:24,27:29)]
bla4 <- melt(bla3)
tmp.1 <- c(rep('Nidus width',59),
rep('Nidus height',59),
rep('Nidus depth',59),
rep('Nidus volume',59),
rep('Venuous drainage',59),
rep('Eloquence',59),
rep('Martin Spetzler',59))
tmp.2 <- rep(tmp.1,2)
bla4$condition <- tmp.2
tmp.3 <- c(rep('1st',length(tmp.1)),
rep('2nd',length(tmp.1)))
bla4$time <- tmp.3
names(bla4)[3:4] <- c('Condition','Time')
ggplot(data = bla4, aes(x= Condition, y = value, fill = Time)) +
geom_boxplot() + scale_y_continuous(limits = c(0,100))
#plot differences
bla5 <- melt(bla3[,1:7] - bla3[,8:14])
bla5$Condition <- tmp.1
ggplot(data = bla5, aes(x= Condition, y = value)) +
geom_boxplot(fill='cornflowerblue') + scale_y_continuous(limits = c(-20,20))
library('reshape2')
bla3 <- clean.data.v2[,c(10:16,21:24,27:29)]
bla4 <- melt(bla3)
tmp.1 <- c(rep('Nidus width',59),
rep('Nidus height',59),
rep('Nidus depth',59),
rep('Nidus volume',59),
rep('Venuous drainage',59),
rep('Eloquence',59),
rep('Martin Spetzler',59))
tmp.2 <- rep(tmp.1,2)
bla4$condition <- tmp.2
tmp.3 <- c(rep('1st',length(tmp.1)),
rep('2nd',length(tmp.1)))
bla4$time <- tmp.3
names(bla4)[3:4] <- c('Condition','Time')
ggplot(data = bla4, aes(x= Condition, y = value, fill = Time)) +
geom_boxplot() + scale_y_continuous(limits = c(0,100))
#plot differences
bla5 <- melt(bla3[,1:7] - bla3[,8:14])
bla5$Condition <- tmp.1
ggplot(data = bla5, aes(x= Condition, y = value)) +
geom_boxplot(fill='cornflowerblue') + scale_y_continuous(limits = c(-20,20))  +
labs(title = 'Difference 1st and 2nd visit')
?  t.test
t.test(bla5[,1:7],bla5[,8:14],paired = TRUE)
bla3
t.test(bla3[,1:7],bla3[,8:14],paired = TRUE)
bla3[,8:14]
t.test(bla3[,1],bla3[,8],paired = TRUE)
t.test(bla3,bla3,paired = TRUE)
t.test(bla3,paired = TRUE)
t.test(bla3[,1],bla3[,8],paired = TRUE)
sol.t <- t.test(bla3[,1],bla3[,8],paired = TRUE)
sol.t
sol.t$statistic
sol.t$p.value
sol.t <- list()
solt.t
sol.t
range(8)
range(1,8)
range(1,8,1)
range(1,1,8)
1:8
sol.t <- list()
for (idx in 1:8){
sol.t[[idx]] <- t.test(bla3[,idx],bla3[,idx + 8 -1],paired = TRUE)
}
for (idx in 1:7){
sol.t[[idx]] <- t.test(bla3[,idx],bla3[,idx + 8 - 1],paired = TRUE)
}
sol.t
sol.t[1]
sol.t[[1]]$p.value
sol.t[[1]]$p.value
for (idx in 1:7){
sol.t[[idx]] <- t.test(bla3[,idx],bla3[,idx + 8 - 1],paired = TRUE)
sol.t[[idx]]$p.value
}
sol.t <- list()
for (idx in 1:7){
sol.t[[idx]] <- t.test(bla3[,idx],bla3[,idx + 8 - 1],paired = TRUE)
print(sol.t[[idx]]$p.value)
}
sol.t
for (idx in 1:7){
sol.t[[idx]] <- t.test(na.omit(bla3[,idx]),na.omit(bla3[,idx + 8 - 1]),paired = TRUE)
print(sol.t[[idx]]$p.value)
}
sol.t <- list()
bla6 <- na.omit(bla3)
for (idx in 1:7){
sol.t[[idx]] <- t.test(bla6[,idx],bla6[,idx + 8 - 1],paired = TRUE)
print(sol.t[[idx]]$p.value)
}
View(bla6)
for (idx in 1:7){
sol.t[[idx]] <- t.test(bla3[,idx],bla3[,idx + 8 - 1],paired = TRUE)
print(sol.t[[idx]]$p.value)
}
library('reshape2')
bla3 <- clean.data.v2[,c(10:16,21:24,27:29)]
bla4 <- melt(bla3)
tmp.1 <- c(rep('Nidus width',59),
rep('Nidus height',59),
rep('Nidus depth',59),
rep('Nidus volume',59),
rep('Venuous drainage',59),
rep('Eloquence',59),
rep('Martin Spetzler',59))
tmp.2 <- rep(tmp.1,2)
bla4$condition <- tmp.2
tmp.3 <- c(rep('1st',length(tmp.1)),
rep('2nd',length(tmp.1)))
bla4$time <- tmp.3
names(bla4)[3:4] <- c('Condition','Time')
ggplot(data = bla4, aes(x= Condition, y = value, fill = Time)) +
geom_boxplot() + scale_y_continuous(limits = c(0,100))
library('reshape2')
library('ggplot2')
bla3 <- clean.data.v2[,c(10:16,21:24,27:29)]
bla4 <- melt(bla3)
tmp.1 <- c(rep('Nidus width',59),
rep('Nidus height',59),
rep('Nidus depth',59),
rep('Nidus volume',59),
rep('Venuous drainage',59),
rep('Eloquence',59),
rep('Martin Spetzler',59))
tmp.2 <- rep(tmp.1,2)
bla4$condition <- tmp.2
tmp.3 <- c(rep('1st',length(tmp.1)),
rep('2nd',length(tmp.1)))
bla4$time <- tmp.3
names(bla4)[3:4] <- c('Condition','Time')
ggplot(data = bla4, aes(x= Condition, y = value, fill = Time)) +
geom_boxplot() + scale_y_continuous(limits = c(0,100))
#plot differences
bla5 <- melt(bla3[,1:7] - bla3[,8:14])
bla5$Condition <- tmp.1
ggplot(data = bla5, aes(x= Condition, y = value)) +
geom_boxplot(fill='cornflowerblue') + scale_y_continuous(limits = c(-20,20))  +
labs(title = 'Difference 1st and 2nd visit')
sol.t <- list()
for (idx in 1:7){
sol.t[[idx]] <- t.test(bla3[,idx],bla3[,idx + 8 - 1],paired = TRUE)
print(sol.t[[idx]]$p.value)
}
View(bla3)
library('reshape2')
library('ggplot2')
bla3 <- clean.data.v2[,c(10:16,21:24,27:29)]
bla4 <- melt(bla3)
tmp.1 <- c(rep('Nidus width',59),
rep('Nidus height',59),
rep('Nidus depth',59),
rep('Nidus volume',59),
rep('Venuous drainage',59),
rep('Eloquence',59),
rep('Martin Spetzler',59))
tmp.2 <- rep(tmp.1,2)
bla4$condition <- tmp.2
tmp.3 <- c(rep('1st',length(tmp.1)),
rep('2nd',length(tmp.1)))
bla4$time <- tmp.3
names(bla4)[3:4] <- c('Condition','Time')
ggplot(data = bla4, aes(x= Condition, y = value, fill = Time)) +
geom_boxplot() + scale_y_continuous(limits = c(0,100))
#plot differences
bla5 <- melt(bla3[,1:7] - bla3[,8:14])
bla5$Condition <- tmp.1
ggplot(data = bla5, aes(x= Condition, y = value)) +
geom_boxplot(fill='cornflowerblue') + scale_y_continuous(limits = c(-20,20))  +
labs(title = 'Difference 1st and 2nd visit')
sol.t <- list()
for (idx in 1:7){
sol.t[[idx]] <- t.test(bla3[,idx],bla3[,idx + 8 - 1],paired = TRUE)
print(sol.t[[idx]]$p.value)
}
library('reshape2')
library('ggplot2')
bla3 <- clean.data.v2[,c(10:16,21:24,27:29)]
bla4 <- melt(bla3)
tmp.1 <- c(rep('Nidus width',59),
rep('Nidus height',59),
rep('Nidus depth',59),
rep('Nidus volume',59),
rep('Venuous drainage',59),
rep('Eloquence',59),
rep('Martin Spetzler',59))
tmp.2 <- rep(tmp.1,2)
bla4$condition <- tmp.2
tmp.3 <- c(rep('1st',length(tmp.1)),
rep('2nd',length(tmp.1)))
bla4$time <- tmp.3
names(bla4)[3:4] <- c('Condition','Time')
ggplot(data = bla4, aes(x= Condition, y = value, fill = Time)) +
geom_boxplot() + scale_y_continuous(limits = c(0,100))
#plot differences
bla5 <- melt(bla3[,1:7] - bla3[,8:14])
bla5$Condition <- tmp.1
ggplot(data = bla5, aes(x= Condition, y = value)) +
geom_boxplot(fill='cornflowerblue') + scale_y_continuous(limits = c(-20,20))  +
labs(title = 'Difference 1st and 2nd visit')
sol.t <- list()
for (idx in 1:7){
sol.t[[idx]] <- t.test(bla3[,idx],bla3[,idx + 8 - 1],paired = TRUE)
print(sol.t[[idx]]$p.value)
}
library('reshape2')
library('ggplot2')
bla3 <- clean.data.v2[,c(10:16,21:24,27:29)]
bla4 <- melt(bla3)
tmp.1 <- c(rep('Nidus width',59),
rep('Nidus height',59),
rep('Nidus depth',59),
rep('Nidus volume',59),
rep('Venuous drainage',59),
rep('Eloquence',59),
rep('Martin Spetzler',59))
tmp.2 <- rep(tmp.1,2)
bla4$condition <- tmp.2
tmp.3 <- c(rep('1st',length(tmp.1)),
rep('2nd',length(tmp.1)))
bla4$time <- tmp.3
names(bla4)[3:4] <- c('Condition','Time')
ggplot(data = bla4, aes(x= Condition, y = value, fill = Time)) +
geom_boxplot() + scale_y_continuous(limits = c(0,100))
#plot differences
bla5 <- melt(bla3[,1:7] - bla3[,8:14])
bla5$Condition <- tmp.1
ggplot(data = bla5, aes(x= Condition, y = value)) +
geom_boxplot(fill='cornflowerblue') + scale_y_continuous(limits = c(-10,10))  +
labs(title = 'Difference 1st and 2nd visit')
sol.t <- list()
for (idx in 1:7){
sol.t[[idx]] <- t.test(bla3[,idx],bla3[,idx + 8 - 1],paired = TRUE)
print(sol.t[[idx]]$p.value)
}
library('openxlsx')
library('dplyr')
library('ggplot2')
library('reshape2')
data.path <- '../data/'
raw.data <- read.xlsx(paste0(data.path,'AVM_DSA_Update_EPIE_DBER.xlsx'),sheet = 1)
#kick out Nan columns
clean.data <- raw.data[,-c(1,2,3,4,5,8,9,10,11,12,13,19,22,30,33,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,76,77)]
library('caret')
library('corrplot')
library('Hmisc')
install.packages('Hmisc')
library('caret')
library('corrplot')
library('Hmisc')
new.data <- read.csv(paste0(data.path,'Cleaned_data_from_Python.csv'))
data.cor <- cor(new.data,use = 'complete.obs')
png('CorPlot.png', width = 2000, height = 2000)
corrplot(data.cor,method = 'circle')
dev.off()
tmp <- findCorrelation(data.cor,cutoff = 0.8)
filtered.data <- new.data[,-c(tmp)]
data.cor <- cor(filtered.data,use = 'complete.obs')
png('CorPlot_clean.png', width = 2000, height = 2000)
corrplot(data.cor,method = 'circle')
dev.off()
#now with probabilities
res <- rcorr(as.matrix(new.data))
flattenCorrMatrix <- function(cormat, pmat) {
ut <- upper.tri(cormat)
data.frame(
row = rownames(cormat)[row(cormat)[ut]],
column = rownames(cormat)[col(cormat)[ut]],
cor  =(cormat)[ut],
p = pmat[ut]
)
}
cortable <- flattenCorrMatrix(res$r,res$P)
cortable
cortable$column
cortable$column[947:990]
cortable$row[947:990]
cortable$cor[947:990]
round(cortable$cor[947:990],2)
cortable$row[947:990]
round(cortable$cor[947:990],2)
cortable$row[947+25]
cortable$row[947+32]
cortable$row[947+24]
cortable$row[947+26]
cortable$row[947+31]
cortable$cor[947+31]
cortable$row[947:990]
cortable$cor[947:990]
round(cortable$cor[947:990],2)
round(cortable$p[947:990],2)
cortable$row[947+31]
cortable$row[947:947+30]
cortable$row[947:947+30]
cortable$row[947:(947+30)]
cortable$p[947:(947+30)]
round(cortable$p[947:(947+30)],2)
round(cortable$p[(947+32):990],2)
round(cortable$p[947+31],2)
round(cortable$row[947+31],2)
cortable$row[947+31]
cortable$row[947+30]
cortable$cor[947+30]
round(cortable$cor[947+30],2)
round(cortable$cor[947+29],2)
cortable$row[947+31]
cortable$cor[947+31]
cortable$row[
]
cortable$row
cortable$cor[947+31]
cortable$cor[947]
cortable$row[947]
cortable$row[946]
cortable$colum[947]
cortable$colum[946]
cortable$colum[947]
cortable$colum[947:990]
cortable$row[947:990]
cortable$cor[947:990]
cortable$cor[948:990]
round(cortable$cor[948:990],2)
round(cortable$cor[947+31],2)
cortable$cor[947+31]
cortable$row[947+31]
cortable$row[947:947+30]
cortable$row[947:(947+30)]
cortable$row[948:(947+30)]
round(cortable$cor[948:(947+30)],2)
tmp$cor <- round(cortable$cor[948:(947+30)],2)
tmp$cor <- data.frame(round(cortable$cor[948:(947+30)],2))
cortable$row[948:(947+30)]
cortable$row[948:(947+29)]
cortable$cor[948:(947+29)]
round(cortable$cor[948:(947+29)],2)
cortable$cor[948:(947+29)]
cortable$row[948:(947+29)]
cortable$row[948:(948+29)]
cortable$row[948:(948+28)]
tmp <- data.frame(cortable$row[948:(948+28)],round(cortable$cor[948:(948+28)],2))
View(tmp)
tmp <- data.frame(cortable$row[948:990],round(cortable$cor[948:990],2),round(cortable$p(948:990),2))
tmp <- data.frame(cortable$row[948:990],round(cortable$cor[948:990],2),round(cortable$p(948:990)),2)
tmp <- data.frame(cortable$row[948:990],round(cortable$cor[948:990],2),round(cortable$p(948:990),2))
tmp <- data.frame(cortable$row[948:990],round(cortable$cor[948:990],2),round(cortable$p[948:990],2))
tmp <- data.frame(cortable$row[948:990],round(cortable$cor[948:990],2),round(cortable$p[948:990],3))
library('caret')
library('corrplot')
library('Hmisc')
new.data <- read.csv(paste0(data.path,'Cleaned_data_from_Python.csv'))
data.cor <- cor(new.data,use = 'complete.obs')
png('CorPlot.png', width = 2000, height = 2000)
corrplot(data.cor,method = 'circle')
dev.off()
tmp <- findCorrelation(data.cor,cutoff = 0.8)
filtered.data <- new.data[,-c(tmp)]
data.cor <- cor(filtered.data,use = 'complete.obs')
png('CorPlot_clean.png', width = 2000, height = 2000)
corrplot(data.cor,method = 'circle')
dev.off()
#now with probabilities
res <- rcorr(as.matrix(new.data))
flattenCorrMatrix <- function(cormat, pmat) {
ut <- upper.tri(cormat)
data.frame(
row = rownames(cormat)[row(cormat)[ut]],
column = rownames(cormat)[col(cormat)[ut]],
cor  =(cormat)[ut],
p = pmat[ut]
)
}
cortable <- flattenCorrMatrix(res$r,res$P)
corrtable <- data.frame(cortable$row[948:990],round(cortable$cor[948:990],2),round(cortable$p[948:990],3))
names(corrtable) <- c('Parameter','Correlation','p value')
View(corrtable)
library('openxlsx')
library('dplyr')
library('ggplot2')
library('reshape2')
data.path <- '../data/'
raw.data <- read.xlsx(paste0(data.path,'AVM_DSA_Update_EPIE_DBER.xlsx'),sheet = 1)
#kick out Nan columns
clean.data <- raw.data[,-c(1,2,3,4,5,8,9,10,11,12,13,19,22,30,33,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,76,77)]
library('caret')
library('corrplot')
library('Hmisc')
new.data <- read.csv(paste0(data.path,'Cleaned_data_from_Python.csv'))
data.cor <- cor(new.data,use = 'complete.obs')
png('CorPlot.png', width = 2000, height = 2000)
corrplot(data.cor,method = 'circle')
dev.off()
tmp <- findCorrelation(data.cor,cutoff = 0.8)
filtered.data <- new.data[,-c(tmp)]
data.cor <- cor(filtered.data,use = 'complete.obs')
png('CorPlot_clean.png', width = 2000, height = 2000)
corrplot(data.cor,method = 'circle')
dev.off()
#now with probabilities
res <- rcorr(as.matrix(new.data))
flattenCorrMatrix <- function(cormat, pmat) {
ut <- upper.tri(cormat)
data.frame(
row = rownames(cormat)[row(cormat)[ut]],
column = rownames(cormat)[col(cormat)[ut]],
cor  =(cormat)[ut],
p = pmat[ut]
)
}
cortable <- flattenCorrMatrix(res$r,res$P)
corrtable <- data.frame(cortable$row[948:990],round(cortable$cor[948:990],2),round(cortable$p[948:990],3))
names(corrtable) <- c('Parameter','Correlation','p value')
library('xlsx')
write.xlsx(corrtable, "c:/Corrtable.xlsx")
write.xlsx(corrtable, "c:/Corrtable.xlsx")
library('openxlsx')
library('dplyr')
library('ggplot2')
library('reshape2')
data.path <- '../data/'
raw.data <- read.xlsx(paste0(data.path,'AVM_DSA_Update_EPIE_DBER.xlsx'),sheet = 1)
rm(list=ls())
library('openxlsx')
library('dplyr')
library('ggplot2')
library('reshape2')
data.path <- '../data/'
raw.data <- read.xlsx(paste0(data.path,'AVM_DSA_Update_EPIE_DBER.xlsx'),sheet = 1)
library('openxlsx')
read.xlsx(paste0(data.path,'AVM_DSA_Update_EPIE_DBER.xlsx'),sheet = 1)
library('openxlsx')
library('dplyr')
library('ggplot2')
library('reshape2')
data.path <- '../data/'
raw.data <- read.xlsx(paste0(data.path,'AVM_DSA_Update_EPIE_DBER.xlsx'),sheet = 1)
