? lm
library('openxlsx')
library('dplyr')
library('ggplot2')
library('reshape2')
data.path <- '../data/'
raw.data <- read.xlsx(paste0(data.path,'AVM_DSA_Update_EPIE_DBER.xlsx'),sheet = 1)
#kick out Nan columns
clean.data <- raw.data[,-c(1,2,3,4,5,8,9,10,11,12,13,19,22,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,76,77)]
library('corrplot')
num.data <- as.data.frame(sapply(clean.data,as.numeric))
#sapply(num.data,is.numeric)
data.cor <- cor(num.data,use = 'pairwise.complete.obs')
png('CorPlot.png', width = 2000, height = 2000)
corrplot(data.cor,method = 'circle')
dev.off()
fit <- lm(Volume.of.Hemorrhage.(ml) ~ ., clean.data)
fit <- lm(`Volume.of.Hemorrhage.(ml)` ~ . , clean.data)
summary(fit)
fit <- lm(`Volume.of.Hemorrhage.(ml)` ~ . , clean.data)
summary(fit)
View(clean.data)
fit <- lm(`Volume.of.Hemorrhage.(ml)` ~ . , clean.data, na.action = na.exclude)
summary(fit)
fit <- lm(`Volume.of.Hemorrhage.(ml)` ~ . , clean.data, na.action = na.omit)
summary(fit)
? write.csv
write.csv(clean.data, file = paste0(data.path,'Clean_data.csv'))
```{r}
library('openxlsx')
library('dplyr')
library('ggplot2')
library('reshape2')
data.path <- '../data/'
raw.data <- read.xlsx(paste0(data.path,'AVM_DSA_Update_EPIE_DBER.xlsx'),sheet = 1)
#kick out Nan columns
clean.data <- raw.data[,-c(1,2,3,4,5,8,9,10,11,12,13,19,22,30,33,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,76,77)]
library('caret')
new.data <- read.csv(paste0(data.path,'Cleaned_data_from_Python.csv'))
data.cor <- cor(new.data,use = 'complete.obs')
png('CorPlot.png', width = 2000, height = 2000)
corrplot(data.cor,method = 'circle')
library('caret')
new.data <- read.csv(paste0(data.path,'Cleaned_data_from_Python.csv'))
data.cor <- cor(new.data,use = 'complete.obs')
library('caret')
new.data <- read.csv(paste0(data.path,'Cleaned_data_from_Python.csv'))
data.cor <- cor(new.data,use = 'complete.obs')
png('CorPlot.png', width = 2000, height = 2000)
corrplot(data.cor,method = 'circle')
library('caret')
library('corrplot')
new.data <- read.csv(paste0(data.path,'Cleaned_data_from_Python.csv'))
data.cor <- cor(new.data,use = 'complete.obs')
png('CorPlot.png', width = 2000, height = 2000)
corrplot(data.cor,method = 'circle')
dev.off()
tmp <- findCorrelation(data.cor,cutoff = 0.8)
filtered.data <- new.data[,-c(tmp)]
data.cor <- cor(filtered.data,use = 'complete.obs')
png('CorPlot_clean.png', width = 2000, height = 2000)
corrplot(data.cor,method = 'circle')
dev.off()
fit <- lm(`Volume.of.Hemorrhage..ml.` ~ ., data = filtered.data)
summary(fit)
fit <- lm(`Volume.of.Hemorrhage..ml.` ~ ., data = filtered.data)
fit
fit <- lm(`Volume.of.Hemorrhage..ml.` ~ ., data = filtered.data)
summary(fit)
View(clean.data)
clean.data$`Volume.of.Hemorrhage.(ml)`
clean.data$Volume.change.between.1st.and.2nd.DAS
clean.data$`Volume.change.%`
clean.data$1`1st.DSA.Nidus.Volumen.(ml)`
clean.data$`1st.DSA.Nidus.Volumen.(ml)`
clean.data$`1st.DSA.Nidus.Volumen.(ml)` - clean.data$2`2nd.DSA.Nidus.Volumen.(ml)`
as.numeric(clean.data$`1st.DSA.Nidus.Volumen.(ml)`) - as.numeric(clean.data$2`2nd.DSA.Nidus.Volumen.(ml)`)
clean.data$2`2nd.DSA.Nidus.Volumen.(ml)`
clean.data$2`2nd.DSA.Nidus.Volumen.(ml)
clean.data$`2nd.DSA.Nidus.Volumen.(ml)
sad
asd
xcv
ASas
cdxcd
- asdas
asddddddddddddddddddd
clean.data$`1st.DSA.Nidus.Volumen.(ml)` - clean.data$`2nd.DSA.Nidus.Volumen.(ml)`
clean.data$`Volume.of.Hemorrhage.(ml)`
library('ggplot2')
ggplot(data = clean.data, aes(x = Volume.change.between.1st.and.2nd.DAS, y = `Volume.of.Hemorrhage.(ml)`) +
geom_point()
library('ggplot2')
ggplot(data = clean.data, aes(x = Volume.change.between.1st.and.2nd.DAS, y = `Volume.of.Hemorrhage.(ml)`)) +
geom_point()
library('ggplot2')
ggplot(data = clean.data, aes(x = Volume.change.between.1st.and.2nd.DAS, y = `Volume.of.Hemorrhage.(ml)`)) +
geom_point() +
geom_smooth()
library('ggplot2')
ggplot(data = clean.data, aes(x = Volume.change.between.1st.and.2nd.DAS, y = `Volume.of.Hemorrhage.(ml)`)) +
geom_point() +
geom_smooth(method = lm)
library('ggplot2')
ggplot(data = clean.data, aes(x = Volume.change.between.1st.and.2nd.DAS, y = `new.draining.vein.compared.to.1st.DSA;.0=No;.1=yes`)) +
geom_point() +
geom_smooth(method = lm)
library('ggplot2')
ggplot(data = clean.data, aes(y = Volume.change.between.1st.and.2nd.DAS, x = `new.draining.vein.compared.to.1st.DSA;.0=No;.1=yes`)) +
geom_point() +
geom_smooth(method = lm)
library('ggplot2')
ggplot(data = clean.data, aes(y = `Volume.of.Hemorrhage.(ml)`, x = `new.draining.vein.compared.to.1st.DSA;.0=No;.1=yes`)) +
geom_point() +
geom_smooth(method = lm)
library('ggplot2')
ggplot(data = clean.data, aes(y = `Volume.of.Hemorrhage.(ml)`, x = `Report:.New.nidus?;.0=no;.1=yes`)) +
geom_point() +
geom_smooth(method = lm)
library('ggplot2')
ggplot(data = clean.data, aes(y = `Volume.of.Hemorrhage.(ml)`, x = `2nd.DSA.Venous.drainage;.0=superficial;.1=deep`)) +
geom_point() +
geom_smooth(method = lm)
library('ggplot2')
ggplot(data = clean.data, aes(y = `Volume.of.Hemorrhage.(ml)`, x = `2nd.DSA.Venous.drainage;.0=superficial;.1=deep`)) +
geom_point() +
geom_smooth(method = lm)
library('rpart')
fit.tree <- rpart(data = clean.data, `Volume.of.Hemorrhage..ml.` ~ .)
library('ggplot2')
ggplot(data = clean.data, aes(y = `Volume.of.Hemorrhage.(ml)`, x = `2nd.DSA.Venous.drainage;.0=superficial;.1=deep`)) +
geom_point() +
geom_smooth(method = lm)
library('rpart')
fit.tree <- rpart(data = clean.data, `Volume.of.Hemorrhage.(ml)` ~ .)
plot(fit.tree)
library('ggplot2')
ggplot(data = clean.data, aes(y = `Volume.of.Hemorrhage.(ml)`, x = `2nd.DSA.Venous.drainage;.0=superficial;.1=deep`)) +
geom_point() +
geom_smooth(method = lm)
library('rpart')
fit.tree <- rpart(data = clean.data, `Volume.of.Hemorrhage.(ml)` ~ .,  method = 'anova', parms = list(split = 'information'), control = rpart.control(cp = 0.003))
plot(fit.tree)
library('ggplot2')
ggplot(data = clean.data, aes(y = `Volume.of.Hemorrhage.(ml)`, x = `2nd.DSA.Venous.drainage;.0=superficial;.1=deep`)) +
geom_point() +
geom_smooth(method = lm)
library('rpart')
fit.tree <- rpart(data = clean.data, `Volume.of.Hemorrhage.(ml)` ~ .,  method = 'anova', parms = list(split = 'information'), control = rpart.control(cp = 0.003))
plot(as.party(fit.tree))
library('ggplot2')
library('partykit')
ggplot(data = clean.data, aes(y = `Volume.of.Hemorrhage.(ml)`, x = `2nd.DSA.Venous.drainage;.0=superficial;.1=deep`)) +
geom_point() +
geom_smooth(method = lm)
library('rpart')
fit.tree <- rpart(data = clean.data, `Volume.of.Hemorrhage.(ml)` ~ .,  method = 'anova', parms = list(split = 'information'), control = rpart.control(cp = 0.003))
plot(as.party(fit.tree))
library('ggplot2')
library('partykit')
ggplot(data = clean.data, aes(y = `Volume.of.Hemorrhage.(ml)`, x = `2nd.DSA.Venous.drainage;.0=superficial;.1=deep`)) +
geom_point() +
geom_smooth(method = lm)
clean.data.num <- sapply(clean.data, FUN = as.numeric)
library('rpart')
fit.tree <- rpart(data = clean.data, `Volume.of.Hemorrhage.(ml)` ~ .,  method = 'anova', parms = list(split = 'information'), control = rpart.control(cp = 0.003))
plot(as.party(fit.tree))
library('ggplot2')
library('partykit')
ggplot(data = clean.data, aes(y = `Volume.of.Hemorrhage.(ml)`, x = `2nd.DSA.Venous.drainage;.0=superficial;.1=deep`)) +
geom_point() +
geom_smooth(method = lm)
clean.data.num <- sapply(clean.data, FUN = as.numeric)
library('rpart')
fit.tree <- rpart(data = clean.data.num, `Volume.of.Hemorrhage.(ml)` ~ .,  method = 'anova', parms = list(split = 'information'), control = rpart.control(cp = 0.003))
library('ggplot2')
library('partykit')
ggplot(data = clean.data, aes(y = `Volume.of.Hemorrhage.(ml)`, x = `2nd.DSA.Venous.drainage;.0=superficial;.1=deep`)) +
geom_point() +
geom_smooth(method = lm)
clean.data.num <- sapply(clean.data, FUN = as.numeric)
library('rpart')
fit.tree <- rpart(data = clean.data.num, `Volume.of.Hemorrhage.(ml)` ~ .,  method = 'anova', control = rpart.control(cp = 0.003))
View(clean.data.num)
library('ggplot2')
library('partykit')
ggplot(data = clean.data, aes(y = `Volume.of.Hemorrhage.(ml)`, x = `2nd.DSA.Venous.drainage;.0=superficial;.1=deep`)) +
geom_point() +
geom_smooth(method = lm)
clean.data.num <- data.frame(sapply(clean.data, FUN = as.numeric))
library('rpart')
fit.tree <- rpart(data = clean.data.num, `Volume.of.Hemorrhage.(ml)` ~ .,  method = 'anova', control = rpart.control(cp = 0.003))
clean.data
clean.data.num
library('ggplot2')
library('partykit')
ggplot(data = clean.data, aes(y = `Volume.of.Hemorrhage.(ml)`, x = `2nd.DSA.Venous.drainage;.0=superficial;.1=deep`)) +
geom_point() +
geom_smooth(method = lm)
clean.data.num <- data.frame(sapply(clean.data, FUN = as.numeric))
library('rpart')
fit.tree <- rpart(data = clean.data, `Volume.of.Hemorrhage.(ml)` ~ .,  method = 'anova', control = rpart.control(cp = 0.003))
plot(as.party(fit.tree))
clean.data
library('ggplot2')
library('partykit')
ggplot(data = clean.data, aes(y = `Volume.of.Hemorrhage.(ml)`, x = `2nd.DSA.Venous.drainage;.0=superficial;.1=deep`)) +
geom_point() +
geom_smooth(method = lm)
clean.data.num <- as.numeric(as.character(clean.data))
library('rpart')
fit.tree <- rpart(data = clean.data.num, `Volume.of.Hemorrhage.(ml)` ~ .,  method = 'anova', control = rpart.control(cp = 0.003))
library('ggplot2')
library('partykit')
ggplot(data = clean.data, aes(y = `Volume.of.Hemorrhage.(ml)`, x = `2nd.DSA.Venous.drainage;.0=superficial;.1=deep`)) +
geom_point() +
geom_smooth(method = lm)
clean.data.num <- sapply(clean.data, FUN = as.numeric(as.character))
clean.data.char <- sapply(clean.data, FUN = as.character)
library('ggplot2')
library('partykit')
ggplot(data = clean.data, aes(y = `Volume.of.Hemorrhage.(ml)`, x = `2nd.DSA.Venous.drainage;.0=superficial;.1=deep`)) +
geom_point() +
geom_smooth(method = lm)
clean.data.char <- sapply(clean.data, FUN = as.character)
clean.data.num <- sapply(clean.data.char, FUN = as.numeric)
library('rpart')
fit.tree <- rpart(data = clean.data.num, `Volume.of.Hemorrhage.(ml)` ~ .,  method = 'anova', control = rpart.control(cp = 0.003))
fit.tree <- rpart(clean.data.num, `Volume.of.Hemorrhage.(ml)` ~ .,  method = 'anova', control = rpart.control(cp = 0.003))
clean.data.num
library('ggplot2')
library('partykit')
ggplot(data = clean.data, aes(y = `Volume.of.Hemorrhage.(ml)`, x = `2nd.DSA.Venous.drainage;.0=superficial;.1=deep`)) +
geom_point() +
geom_smooth(method = lm)
clean.data.char <- sapply(clean.data, FUN = as.character)
clean.data.num <- data.frame(sapply(clean.data.char, FUN = as.numeric))
library('rpart')
fit.tree <- rpart(clean.data.num, `Volume.of.Hemorrhage.(ml)` ~ .,  method = 'anova', control = rpart.control(cp = 0.003))
clean.data.num <- as.numeric(clean.data)
clean.data.num <- as.numeric(data.frame(clean.data))
library('ggplot2')
library('partykit')
ggplot(data = clean.data, aes(y = `Volume.of.Hemorrhage.(ml)`, x = `2nd.DSA.Venous.drainage;.0=superficial;.1=deep`)) +
geom_point() +
geom_smooth(method = lm)
library('rpart')
fit.tree <- rpart(clean.data, `Volume.of.Hemorrhage.(ml)` ~ .,  method = 'anova', control = rpart.control(cp = 0.003))
library('ggplot2')
library('partykit')
ggplot(data = clean.data, aes(y = `Volume.of.Hemorrhage.(ml)`, x = `2nd.DSA.Venous.drainage;.0=superficial;.1=deep`)) +
geom_point() +
geom_smooth(method = lm)
library('rpart')
fit.tree <- rpart(clean.data, `Volume.of.Hemorrhage.(ml)` ~ .,  method = 'anova', control = rpart.control(cp = 0.003))
library('openxlsx')
library('dplyr')
library('ggplot2')
library('reshape2')
data.path <- '../data/'
raw.data <- read.xlsx(paste0(data.path,'AVM_DSA_Update_EPIE_DBER.xlsx'),sheet = 1)
#kick out Nan columns
clean.data <- raw.data[,-c(1,2,3,4,5,8,9,10,11,12,13,19,22,30,33,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,76,77)]
library('caret')
library('corrplot')
new.data <- read.csv(paste0(data.path,'Cleaned_data_from_Python.csv'))
data.cor <- cor(new.data,use = 'complete.obs')
png('CorPlot.png', width = 2000, height = 2000)
corrplot(data.cor,method = 'circle')
dev.off()
tmp <- findCorrelation(data.cor,cutoff = 0.8)
filtered.data <- new.data[,-c(tmp)]
data.cor <- cor(filtered.data,use = 'complete.obs')
png('CorPlot_clean.png', width = 2000, height = 2000)
corrplot(data.cor,method = 'circle')
dev.off()
fit.one <- lm(`Volume.of.Hemorrhage..ml.` ~ `Report..Smaller...0.no..1.yes`, data = filtered.data)
summary(fit.one)
library('ggplot2')
library('partykit')
ggplot(data = clean.data, aes(y = `Volume.of.Hemorrhage.(ml)`, x = `2nd.DSA.Venous.drainage;.0=superficial;.1=deep`)) +
geom_point() +
geom_smooth(method = lm)
library('rpart')
fit.tree <- rpart(clean.data, `Volume.of.Hemorrhage.(ml)` ~ .,  method = 'anova', control = rpart.control(cp = 0.003))
fit.tree <- rpart(data = clean.data, `Volume.of.Hemorrhage.(ml)` ~ .,  method = 'anova', control = rpart.control(cp = 0.003))
plot(as.party(fit.tree))
is.data.frame(clean.data)
clean.data$2`2nd.DSA.Nidus.height.(mm)`
clean.data$`2nd.DSA.Nidus.height.(mm)`
as.numeric(clean.data$`2nd.DSA.Nidus.height.(mm)`)
sapply(clean.data,FUN = as.numeric())
sapply(clean.data,FUN = as.numeric)
bla <- sapply(clean.data,FUN = as.numeric)
bla
as.data.frame(bla)
bla2 <-as.data.frame(bla)
View(bla2)
bla2$`Volume.change.%`
library('ggplot2')
library('partykit')
ggplot(data = clean.data, aes(y = `Volume.of.Hemorrhage.(ml)`, x = `2nd.DSA.Venous.drainage;.0=superficial;.1=deep`)) +
geom_point() +
geom_smooth(method = lm)
clean.data.num <- sapply(clean.data,FUN = as.numeric)
clean.data.v2 <- as.data.frame(clean.data.num)
library('rpart')
fit.tree <- rpart(data = clean.data.v2, `Volume.of.Hemorrhage.(ml)` ~ .,  method = 'anova', control = rpart.control(cp = 0.003))
plot(as.party(fit.tree))
